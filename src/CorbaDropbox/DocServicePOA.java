package CorbaDropbox;


/**
* CorbaDropbox/DocServicePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from CorbaDropbox.idl
* Tuesday, April 2, 2013 7:08:48 PM IST
*/

public abstract class DocServicePOA extends org.omg.PortableServer.Servant
 implements CorbaDropbox.DocServiceOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("uploadDoc", new java.lang.Integer (0));
    _methods.put ("downloadDoc", new java.lang.Integer (1));
    _methods.put ("queryDocuments", new java.lang.Integer (2));
    _methods.put ("listDocuments", new java.lang.Integer (3));
    _methods.put ("doclist", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // CorbaDropbox/DocService/uploadDoc
       {
         CorbaDropbox.Document document = CorbaDropbox.DocumentHelper.read (in);
         CorbaDropbox.ClientCallback updatedDoc = CorbaDropbox.ClientCallbackHelper.read (in);
         boolean $result = false;
         $result = this.uploadDoc (document, updatedDoc);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 1:  // CorbaDropbox/DocService/downloadDoc
       {
         String filename = in.read_string ();
         CorbaDropbox.User user = CorbaDropbox.UserHelper.read (in);
         CorbaDropbox.Document $result = null;
         $result = this.downloadDoc (filename, user);
         out = $rh.createReply();
         CorbaDropbox.DocumentHelper.write (out, $result);
         break;
       }

       case 2:  // CorbaDropbox/DocService/queryDocuments
       {
         String filename = in.read_string ();
         CorbaDropbox.User user = CorbaDropbox.UserHelper.read (in);
         boolean $result = false;
         $result = this.queryDocuments (filename, user);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // CorbaDropbox/DocService/listDocuments
       {
         String $result = null;
         $result = this.listDocuments ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // CorbaDropbox/DocService/doclist
       {
         CorbaDropbox.User user = CorbaDropbox.UserHelper.read (in);
         String $result = null;
         $result = this.doclist (user);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:CorbaDropbox/DocService:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public DocService _this() 
  {
    return DocServiceHelper.narrow(
    super._this_object());
  }

  public DocService _this(org.omg.CORBA.ORB orb) 
  {
    return DocServiceHelper.narrow(
    super._this_object(orb));
  }


} // class DocServicePOA
